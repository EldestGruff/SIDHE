{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Dev/SIDHE/src/conversation_engine/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// Components\nimport ChatInterface from './components/Chat/ChatInterface';\nimport Dashboard from './components/Dashboard/Dashboard';\n\n// Custom hooks\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { useConversation } from './hooks/useConversation';\n\n/**\n * Main Riker Conversation Engine Frontend\n * \n * Architecture Decision: Single-page application with real-time WebSocket communication\n * integrating with the FastAPI backend for conversational AI interactions.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentView, setCurrentView] = useState('chat');\n  const [systemHealth, setSystemHealth] = useState({});\n\n  // WebSocket connection management\n  const {\n    isConnected,\n    connectionStatus,\n    sendMessage,\n    lastMessage,\n    connectionError\n  } = useWebSocket(`ws://${window.location.host}/ws`);\n\n  // Conversation state management\n  const {\n    conversations,\n    currentConversation,\n    addMessage,\n    createConversation,\n    switchConversation\n  } = useConversation();\n\n  // Handle incoming messages from backend\n  useEffect(() => {\n    if (lastMessage) {\n      try {\n        const messageData = JSON.parse(lastMessage);\n        if (messageData.type === 'connection_established') {\n          console.log('Connection established with backend');\n        } else if (messageData.type === 'response' || messageData.type.endsWith('_response') || messageData.type === 'answer') {\n          // Add assistant response to conversation\n          addMessage(currentConversation, {\n            id: Date.now(),\n            type: 'assistant',\n            content: messageData.content,\n            timestamp: new Date().toISOString(),\n            intent: messageData.intent\n          });\n        } else if (messageData.type === 'system_update') {\n          setSystemHealth(messageData.data);\n        }\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    }\n  }, [lastMessage, currentConversation, addMessage]);\n\n  // Handle sending messages to backend\n  const handleSendMessage = message => {\n    if (isConnected && message.trim()) {\n      // Add user message to conversation\n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      addMessage(currentConversation, userMessage);\n\n      // Send to backend\n      sendMessage(JSON.stringify({\n        content: message,\n        conversation_id: currentConversation,\n        timestamp: new Date().toISOString()\n      }));\n    }\n  };\n  const getConnectionStatusClass = () => {\n    return isConnected ? 'bg-green-900 text-green-200' : 'bg-red-900 text-red-200';\n  };\n  const getConnectionStatusText = () => {\n    return isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected';\n  };\n  const getViewButtonClass = view => {\n    return currentView === view ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App min-h-screen bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-gray-800 border-b border-gray-700 px-6 py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-blue-400\",\n            children: \"\\uD83D\\uDE80 Riker Conversation Engine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `px-3 py-1 rounded-full text-sm font-medium ${getConnectionStatusClass()}`,\n            children: getConnectionStatusText()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentView('chat'),\n            className: `px-4 py-2 rounded-lg font-medium transition-colors ${getViewButtonClass('chat')}`,\n            children: \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentView('dashboard'),\n            className: `px-4 py-2 rounded-lg font-medium transition-colors ${getViewButtonClass('dashboard')}`,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1\",\n      children: [connectionError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900 text-red-200 px-6 py-3 border-b border-red-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-medium\",\n          children: \"Connection Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: connectionError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), currentView === 'chat' ? /*#__PURE__*/_jsxDEV(ChatInterface, {\n        conversation: conversations[currentConversation] || {\n          messages: []\n        },\n        onSendMessage: handleSendMessage,\n        isConnected: isConnected,\n        connectionStatus: connectionStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n        systemHealth: systemHealth,\n        conversations: conversations,\n        isConnected: isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sH58CYIZNoquhbbeHrQPfy4NsPk=\", false, function () {\n  return [useWebSocket, useConversation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatInterface","Dashboard","useWebSocket","useConversation","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","systemHealth","setSystemHealth","isConnected","connectionStatus","sendMessage","lastMessage","connectionError","window","location","host","conversations","currentConversation","addMessage","createConversation","switchConversation","messageData","JSON","parse","type","console","log","endsWith","id","Date","now","content","timestamp","toISOString","intent","data","error","handleSendMessage","message","trim","userMessage","stringify","conversation_id","getConnectionStatusClass","getConnectionStatusText","getViewButtonClass","view","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conversation","messages","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/andy/Dev/SIDHE/src/conversation_engine/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// Components\nimport ChatInterface from './components/Chat/ChatInterface';\nimport Dashboard from './components/Dashboard/Dashboard';\n\n// Custom hooks\nimport { useWebSocket } from './hooks/useWebSocket';\nimport { useConversation } from './hooks/useConversation';\n\n/**\n * Main Riker Conversation Engine Frontend\n * \n * Architecture Decision: Single-page application with real-time WebSocket communication\n * integrating with the FastAPI backend for conversational AI interactions.\n */\nfunction App() {\n  const [currentView, setCurrentView] = useState('chat');\n  const [systemHealth, setSystemHealth] = useState({});\n  \n  // WebSocket connection management\n  const { \n    isConnected, \n    connectionStatus, \n    sendMessage, \n    lastMessage,\n    connectionError \n  } = useWebSocket(`ws://${window.location.host}/ws`);\n  \n  // Conversation state management\n  const {\n    conversations,\n    currentConversation,\n    addMessage,\n    createConversation,\n    switchConversation\n  } = useConversation();\n  \n  // Handle incoming messages from backend\n  useEffect(() => {\n    if (lastMessage) {\n      try {\n        const messageData = JSON.parse(lastMessage);\n        \n        if (messageData.type === 'connection_established') {\n          console.log('Connection established with backend');\n        } else if (messageData.type === 'response' || messageData.type.endsWith('_response') || messageData.type === 'answer') {\n          // Add assistant response to conversation\n          addMessage(currentConversation, {\n            id: Date.now(),\n            type: 'assistant',\n            content: messageData.content,\n            timestamp: new Date().toISOString(),\n            intent: messageData.intent\n          });\n        } else if (messageData.type === 'system_update') {\n          setSystemHealth(messageData.data);\n        }\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    }\n  }, [lastMessage, currentConversation, addMessage]);\n  \n  // Handle sending messages to backend\n  const handleSendMessage = (message) => {\n    if (isConnected && message.trim()) {\n      // Add user message to conversation\n      const userMessage = {\n        id: Date.now(),\n        type: 'user',\n        content: message,\n        timestamp: new Date().toISOString()\n      };\n      \n      addMessage(currentConversation, userMessage);\n      \n      // Send to backend\n      sendMessage(JSON.stringify({\n        content: message,\n        conversation_id: currentConversation,\n        timestamp: new Date().toISOString()\n      }));\n    }\n  };\n  \n  const getConnectionStatusClass = () => {\n    return isConnected ? 'bg-green-900 text-green-200' : 'bg-red-900 text-red-200';\n  };\n  \n  const getConnectionStatusText = () => {\n    return isConnected ? 'ðŸŸ¢ Connected' : 'ðŸ”´ Disconnected';\n  };\n  \n  const getViewButtonClass = (view) => {\n    return currentView === view \n      ? 'bg-blue-600 text-white' \n      : 'bg-gray-700 text-gray-300 hover:bg-gray-600';\n  };\n  \n  return (\n    <div className=\"App min-h-screen bg-gray-900 text-white\">\n      {/* Header */}\n      <header className=\"bg-gray-800 border-b border-gray-700 px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <h1 className=\"text-2xl font-bold text-blue-400\">\n              ðŸš€ Riker Conversation Engine\n            </h1>\n            <span className={`px-3 py-1 rounded-full text-sm font-medium ${getConnectionStatusClass()}`}>\n              {getConnectionStatusText()}\n            </span>\n          </div>\n          \n          <nav className=\"flex space-x-4\">\n            <button \n              onClick={() => setCurrentView('chat')}\n              className={`px-4 py-2 rounded-lg font-medium transition-colors ${getViewButtonClass('chat')}`}\n            >\n              Chat\n            </button>\n            <button \n              onClick={() => setCurrentView('dashboard')}\n              className={`px-4 py-2 rounded-lg font-medium transition-colors ${getViewButtonClass('dashboard')}`}\n            >\n              Dashboard\n            </button>\n          </nav>\n        </div>\n      </header>\n      \n      {/* Main Content */}\n      <main className=\"flex-1\">\n        {connectionError && (\n          <div className=\"bg-red-900 text-red-200 px-6 py-3 border-b border-red-800\">\n            <p className=\"font-medium\">Connection Error:</p>\n            <p className=\"text-sm\">{connectionError}</p>\n          </div>\n        )}\n        \n        {currentView === 'chat' ? (\n          <ChatInterface \n            conversation={conversations[currentConversation] || { messages: [] }}\n            onSendMessage={handleSendMessage}\n            isConnected={isConnected}\n            connectionStatus={connectionStatus}\n          />\n        ) : (\n          <Dashboard \n            systemHealth={systemHealth}\n            conversations={conversations}\n            isConnected={isConnected}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}