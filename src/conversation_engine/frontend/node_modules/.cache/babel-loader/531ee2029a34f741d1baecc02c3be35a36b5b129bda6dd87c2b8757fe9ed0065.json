{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\n\n/**\n * Simple WebSocket hook without auto-reconnection\n */\nexport const useWebSocket = url => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [lastMessage, setLastMessage] = useState(null);\n  const [connectionError, setConnectionError] = useState(null);\n  const wsRef = useRef(null);\n  const mountedRef = useRef(true);\n  useEffect(() => {\n    mountedRef.current = true;\n\n    // Only connect once on mount\n    if (!wsRef.current) {\n      connectWebSocket();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      mountedRef.current = false;\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n    };\n  }, []); // Empty dependency array - only run once\n\n  const connectWebSocket = () => {\n    try {\n      setConnectionStatus('connecting');\n      setConnectionError(null);\n      const ws = new WebSocket(url);\n      wsRef.current = ws;\n      ws.onopen = () => {\n        if (!mountedRef.current) return;\n        console.log('WebSocket connected');\n        setSocket(ws);\n        setIsConnected(true);\n        setConnectionStatus('connected');\n      };\n      ws.onmessage = event => {\n        if (!mountedRef.current) return;\n        setLastMessage(event.data);\n      };\n      ws.onerror = error => {\n        if (!mountedRef.current) return;\n        console.error('WebSocket error:', error);\n        setConnectionError('Connection failed');\n      };\n      ws.onclose = event => {\n        if (!mountedRef.current) return;\n        console.log('WebSocket closed:', event.code, event.reason);\n        setSocket(null);\n        setIsConnected(false);\n        setConnectionStatus('disconnected');\n        wsRef.current = null;\n      };\n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      setConnectionError('Failed to connect');\n    }\n  };\n  const sendMessage = message => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(message);\n    } else {\n      console.warn('WebSocket not connected, message not sent:', message);\n    }\n  };\n  const disconnect = () => {\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n  };\n  return {\n    socket,\n    isConnected,\n    connectionStatus,\n    lastMessage,\n    connectionError,\n    sendMessage,\n    connect: connectWebSocket,\n    disconnect,\n    queuedMessages: 0\n  };\n};\n_s(useWebSocket, \"888zpR7jWsnM74lfXv0S0QUO3R8=\");","map":{"version":3,"names":["useState","useEffect","useRef","useWebSocket","url","_s","socket","setSocket","isConnected","setIsConnected","connectionStatus","setConnectionStatus","lastMessage","setLastMessage","connectionError","setConnectionError","wsRef","mountedRef","current","connectWebSocket","close","ws","WebSocket","onopen","console","log","onmessage","event","data","onerror","error","onclose","code","reason","sendMessage","message","readyState","OPEN","send","warn","disconnect","connect","queuedMessages"],"sources":["/Users/andy/Dev/SIDHE/src/conversation_engine/frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\n\n/**\n * Simple WebSocket hook without auto-reconnection\n */\nexport const useWebSocket = (url) => {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [lastMessage, setLastMessage] = useState(null);\n  const [connectionError, setConnectionError] = useState(null);\n  \n  const wsRef = useRef(null);\n  const mountedRef = useRef(true);\n  \n  useEffect(() => {\n    mountedRef.current = true;\n    \n    // Only connect once on mount\n    if (!wsRef.current) {\n      connectWebSocket();\n    }\n    \n    // Cleanup on unmount\n    return () => {\n      mountedRef.current = false;\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n    };\n  }, []); // Empty dependency array - only run once\n  \n  const connectWebSocket = () => {\n    try {\n      setConnectionStatus('connecting');\n      setConnectionError(null);\n      \n      const ws = new WebSocket(url);\n      wsRef.current = ws;\n      \n      ws.onopen = () => {\n        if (!mountedRef.current) return;\n        \n        console.log('WebSocket connected');\n        setSocket(ws);\n        setIsConnected(true);\n        setConnectionStatus('connected');\n      };\n      \n      ws.onmessage = (event) => {\n        if (!mountedRef.current) return;\n        \n        setLastMessage(event.data);\n      };\n      \n      ws.onerror = (error) => {\n        if (!mountedRef.current) return;\n        \n        console.error('WebSocket error:', error);\n        setConnectionError('Connection failed');\n      };\n      \n      ws.onclose = (event) => {\n        if (!mountedRef.current) return;\n        \n        console.log('WebSocket closed:', event.code, event.reason);\n        setSocket(null);\n        setIsConnected(false);\n        setConnectionStatus('disconnected');\n        wsRef.current = null;\n      };\n      \n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      setConnectionError('Failed to connect');\n    }\n  };\n  \n  const sendMessage = (message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(message);\n    } else {\n      console.warn('WebSocket not connected, message not sent:', message);\n    }\n  };\n  \n  const disconnect = () => {\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n  };\n  \n  return {\n    socket,\n    isConnected,\n    connectionStatus,\n    lastMessage,\n    connectionError,\n    sendMessage,\n    connect: connectWebSocket,\n    disconnect,\n    queuedMessages: 0\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}